---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <title> Astrae | Portal de inversión en Startups </title> 
	</head>
	<body>
		<slot />
	</body>
</html>

<style is:global>
    body{
        width: 100%;
        height: 100%;
        margin: 0;
        display: flex;
        flex-direction: column;
        background-color: #090912;
        color: #fff;
        font-family: "Inter", sans-serif;
        font-optical-sizing: auto;
        font-weight: 500;
        font-style: normal;
        overflow: hidden;
    }
</style>

<script src="https://cdn.lordicon.com/ritcuqlt.js">
    
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const submitBtn = document.getElementById('submit-btn');
    const passwordContainer = document.getElementById('password-container');
    const togglePassword = document.getElementById('toggle-password');
    const eyeIcon = document.getElementById('eye-icon');
    const blurDiv = document.getElementById('blur');

    emailInput.addEventListener('input', () => {
        if (emailInput.value !== '') {
            blurDiv.classList.add('blur-active');
        } else {
            blurDiv.classList.remove('blur-active');
        }
    });

 // Función para validar el formato del email
 function esEmailValido(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
    }

    // Manejar el clic en el botón de envío
    submitBtn.addEventListener('click', function() {
        const emailValue = emailInput.value.trim();

        if (esEmailValido(emailValue)) {
            // Oculta el campo de email y muestra el de contraseña
            emailInput.style.display = 'none';
            passwordContainer.style.display = 'flex';

            // Mover el foco al campo de contraseña
            passwordInput.focus();

            // Cambiar el z-index del blur para mantener el input de contraseña encima
            blurDiv.classList.add('blur-active');
        } else {
            alert('Por favor, introduce un email válido.');
        }
    });

    // Detectar clics fuera del campo de contraseña para resetear
    document.addEventListener('click', function(event) {
        if (passwordContainer.style.display === 'flex' && !passwordContainer.contains(event.target) && !submitBtn.contains(event.target)) {
            // Resetear el formulario
            passwordContainer.style.display = 'none';
            passwordInput.value = '';
            emailInput.style.display = 'block';
            emailInput.value = '';
            blurDiv.classList.remove('blur-active');
            emailInput.focus();
        }
    });

    // Alternar la visibilidad de la contraseña
    togglePassword.addEventListener('click', function() {
        const passwordFieldType = passwordInput.getAttribute('type');
        if (passwordFieldType === 'password') {
            passwordInput.setAttribute('type', 'text');
            eyeIcon.src = 'Imagenes/Registro/Ojo abierto.png'; // Cambia a un icono de ojo abierto
        } else {
            passwordInput.setAttribute('type', 'password');
            eyeIcon.src = 'Imagenes/Registro/Ojo cerrado.png'; // Cambia a un icono de ojo cerrado
        }
    });
</script>
