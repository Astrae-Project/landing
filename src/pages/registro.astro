---
import Layout from '../layouts/Layout-registro.astro';
---

<Layout title="Plantilla">
    <body>
        <img id="estrellas" src="Imagenes/Registro/Estrellas.png">
        <img id="fondo" src="Imagenes/Registro/Fondo.svg">
        <div id="blur"></div>
        <a id="cerrar" href="/index.html"><img id="x" src="Imagenes/Registro/x.svg"></a>
        <header>
            <h1>Bienvenido a Astrae</h1>
            <p id="subtexto-principal">Abre un mundo de grandes oportunidades entrando con <br>tu email o iniciando sesión con tu cuenta de Google</p>
        </header>
        <form id="registerForm" method="post">
            <input id="email" type="email" placeholder="Introduce email" required>
            
            <!-- Contenedor para el Username -->
            <div id="username-container" class="input-container" style="display: none;" >
                <input id="username" type="text" placeholder="Introduce nombre de usuario">
            </div>
    
            <!-- Contenedor para la Contraseña -->
            <div id="password-container" class="input-container" style="display: none;">
                <input id="password" type="password" placeholder="Contraseña"> 
                <span id="toggle-password" style="cursor: pointer;">
                    <img id="eye-icon" src="Imagenes/Registro/Ojo cerrado.png" alt="Mostrar/Ocultar Contraseña">
                </span>
            </div>
    
            <button id="submit-btn" type="submit"><img id="flecha" src="Imagenes/Registro/Flecha.svg"></button>
        </form>

        <!--<a id="iniciar" href="https://dev-3cukw7bzrlcixy2o.us.auth0.com/authorize?response_type=code&client_id=IFvhehTi8BtAMwRD9QLXi0AKnNIjTraf&redirect_uri=http://localhost:5000/api/auth/callback&scope=openid%20profile%20email&connection=google-oauth2">
            <img id="google" src="Imagenes/Registro/Inicia sesion con google.svg" alt="Inicia sesión con Google">
        </a> -->

        
        <p class="texto-abajo"><span id="regular">Si ya te has registrado previamente,</span><a href="/inicio-sesion" id="texto-abajo">Inicia Sesión</a></p>
    </body>
    
    <script>
        import axios from 'axios';
    
        console.log("Registration script initializing...");
    
        const registerForm = document.getElementById('registerForm') as HTMLFormElement;
        const emailInput = document.getElementById('email') as HTMLInputElement;
        const usernameContainer = document.getElementById('username-container') as HTMLDivElement;
        const usernameInput = document.getElementById('username') as HTMLInputElement;
        const passwordContainer = document.getElementById('password-container') as HTMLDivElement;
        const passwordInput = document.getElementById('password') as HTMLInputElement;
        const blurElement = document.getElementById('blur') as HTMLDivElement;
        const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
        const togglePassword = document.getElementById('toggle-password') as HTMLSpanElement;
        const eyeIcon = document.getElementById('eye-icon') as HTMLImageElement;
        
        // Check if elements were found
        console.log("Registration form elements found:", {
            registerForm: !!registerForm,
            emailInput: !!emailInput,
            usernameContainer: !!usernameContainer,
            usernameInput: !!usernameInput,
            passwordContainer: !!passwordContainer,
            passwordInput: !!passwordInput,
            submitBtn: !!submitBtn
        });
        
        // Add toggle password functionality
        if (togglePassword && passwordInput && eyeIcon) {
            togglePassword.addEventListener('click', () => {
                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    eyeIcon.src = 'Imagenes/Registro/Ojo abierto.png';
                } else {
                    passwordInput.type = 'password';
                    eyeIcon.src = 'Imagenes/Registro/Ojo cerrado.png';
                }
            });
        }

        // Función para reiniciar el formulario
        function resetForm() {
            if (emailInput) emailInput.value = '';
            if (usernameInput) usernameInput.value = '';
            if (passwordInput) passwordInput.value = '';
            if (usernameContainer) usernameContainer.style.display = 'none';
            if (passwordContainer) passwordContainer.style.display = 'none';
            if (emailInput) emailInput.style.display = 'block'; // Ensure email is visible
            if (blurElement) blurElement.classList.remove('blur-active');
        }

        // Event listener para el input de email
        if (emailInput) {
            emailInput.addEventListener('input', () => {
                if (emailInput.value.length > 0 && blurElement) {
                    blurElement.classList.add('blur-active');
                } else if (blurElement) {
                    blurElement.classList.remove('blur-active');
                }
            });
        }

        // Event listener para reiniciar al hacer clic fuera
        document.addEventListener('click', (event) => {
            const isClickInside = registerForm?.contains(event.target as Node);
            if (!isClickInside) {
                resetForm();
            }
        });
    
        // Función para mostrar solo el contenedor especificado
        function showOnly(container: HTMLElement) {
            if (usernameContainer) usernameContainer.style.display = 'none';
            if (passwordContainer) passwordContainer.style.display = 'none';
            if (emailInput) emailInput.style.display = 'none';
            container.style.display = 'block';
        }
        
        // Alternative approach using the button click
        if (submitBtn) {
            submitBtn.addEventListener('click', (event) => {
                event.preventDefault();
                console.log("Submit button clicked");
                
                const email = emailInput ? emailInput.value : '';
                const password = passwordInput ? passwordInput.value : '';
                const username = usernameInput ? usernameInput.value : '';
                
                console.log("Current input values:", { 
                    email, 
                    password: password ? '(set)' : '(empty)', 
                    username 
                });
                
                console.log("Container visibility:", {
                    passwordContainer: passwordContainer ? window.getComputedStyle(passwordContainer).display : 'unknown',
                    usernameContainer: usernameContainer ? window.getComputedStyle(usernameContainer).display : 'unknown'
                });
                
                // Check what step we're at and proceed accordingly
                
                // Step 1: Email entered, show password field
                if (
                    email && 
                    passwordContainer && 
                    window.getComputedStyle(passwordContainer).display === 'none' &&
                    usernameContainer && 
                    window.getComputedStyle(usernameContainer).display === 'none'
                ) {
                    console.log("Moving to password step");
                    showOnly(passwordContainer);
                    return;
                }
                
                // Step 2: Password entered, show username field
                if (
                    email && 
                    password && 
                    usernameContainer && 
                    window.getComputedStyle(usernameContainer).display === 'none'
                ) {
                    console.log("Moving to username step");
                    showOnly(usernameContainer);
                    return;
                }
                
                // Step 3: All fields completed, submit form
                if (email && password && username) {
                    console.log("All fields completed, submitting form");
                    submitRegistration(email, password, username);
                }
            });
        }
    
        // Traditional form submission
        if (registerForm) {
            registerForm.addEventListener('submit', async function (event) {
                event.preventDefault();
                console.log("Form submitted");
        
                // Obtener el email
                const email = emailInput ? emailInput.value : '';
                console.log("Email value:", email);
        
                // Verificar si debe mostrarse el campo de contraseña
                if (
                    passwordContainer && 
                    window.getComputedStyle(passwordContainer).display === 'none' && 
                    email
                ) {
                    console.log("Showing password container from form submit");
                    showOnly(passwordContainer);
                    return;
                }
        
                // Verificar si debe mostrarse el campo de nombre de usuario
                if (
                    usernameContainer && 
                    window.getComputedStyle(usernameContainer).display === 'none' && 
                    passwordInput && passwordInput.value
                ) {
                    console.log("Showing username container from form submit");
                    showOnly(usernameContainer);
                    return;
                }
        
                // Obtener el nombre de usuario
                const username = usernameInput ? usernameInput.value : '';
                const password = passwordInput ? passwordInput.value : '';
        
                // Verificar si todos los campos están completos antes de enviar
                if (
                    usernameContainer && 
                    window.getComputedStyle(usernameContainer).display === 'block' && 
                    username && 
                    password
                ) {
                    console.log("All fields completed from form submit");
                    submitRegistration(email, password, username);
                }
            });
        }
        
        // Function to handle registration submission
        async function submitRegistration(email: string, password: string, username: string) {
            try {
                console.log("Submitting registration for:", email);
                const response = await axios.post('http://localhost:5000/api/auth/registrar', {
                    email,
                    username,
                    password
                });

                if (response.status === 201) {
                    console.log('Registro exitoso:', response.data);
                    window.location.href = 'http://localhost:4321/seleccionar-rol';
                } else {
                    console.error('Error en el registro:', response.data);
                    alert('Error en el registro, por favor intenta nuevamente.');
                }
            } catch (error) {
                console.error('Error en la solicitud:', error);
                alert('Error al conectarse al servidor');
            }
        }
    </script>
    
</Layout>

<style>
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');

    img#estrellas{
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: 0;
    }

    img#fondo{
        position: absolute;
        align-self: center;
        width: 100%;
        height: 80%;
        z-index: -2;
    }

    div#blur{
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: -1;
        background-color: #0909129c;
        backdrop-filter: blur(10px);
        transition: z-index 0.1s ease;
    }

    div#blur.blur-active {
        z-index: 3; /* Mantén este valor bajo el input (z-index 4) */
    }

    a#cerrar{
        position: absolute;
        left: 60px;
        top: 60px;
        z-index: 4;
    }

    h1{
        position: relative;
        text-align: center;
        font-size: 32px;
        font-weight: 700;
        letter-spacing: -1px;
        background: linear-gradient(150deg, #FFFFFF 0%, #fff 30%, #6B6B71 70%);
        -webkit-background-clip: text;
        color: transparent;
        background-clip: text;
        margin-top: 315px;
    }

    p#subtexto-principal{
        position: relative;
        font-size: 14px;
        font-weight: 400;
        line-height: 24px;
        text-align: center;
        color: #9292ad;
        margin-top: -20px;
        margin-bottom: 22px;
        padding: 0 20px;
    }

    form{
        position: relative;
        width: 320px;
        height: 44px;
        background: rgba(255, 255, 255, 0.06);
        border: 0.5px solid rgba(255, 255, 255, 0.08);
        box-shadow: rgba(0, 0, 0, 0.08) 1px 1px 1px inset;
        backdrop-filter: blur(2px);
        border-radius: 92px;
        padding-left: 21px;
        display: flex;
        cursor: text;
        align-self: center;
        z-index: 4;
        margin: 0 auto;
    }

    input{
        width: 85%;
        padding: 0px 8px 1px 0px;
        color: rgb(255, 255, 255);
        transition: color 0.3s;
        margin-top: 2px;
        border: none;
        background: transparent;
        color: rgb(255, 255, 255);
        caret-color: rgb(71, 159, 250);
        font-size: 14px;
    }

    input#password, #username{
        width: 78%;
        height: 92%;
    }

    input#password{
        margin-top: 14px;
    }

    input:focus {
        outline: none;
    }

    div#password-container, #username-container {
        position: relative;
        width: inherit;
    }

    span#toggle-password {
        position: absolute;
        right: 63px;
        top: 14px;
    }

    img#eye-icon {
        position: absolute;
        width: 16px;
        height: 16px;
    }

    button{
        background-color: transparent;
        border: none;
        position: absolute;
        display: flex;
        align-self: center;
        width: 40px;
        height: 25px;
        right: 1px;
        border-radius: 50px;
        cursor: pointer;
    }

    img#flecha{
        position: relative;
        align-self: center;
        width: 25px;
        height: 25px;
    }

    a#iniciar{
        align-self: center;
        margin-top: 27px;
        text-decoration: none;
        color: #fff;
        cursor: pointer;
        font-size: 14px;
        position: relative;
    }

    img#google{
        width: 210px;
    }

    .texto-abajo{
        margin-top: 250px;
        text-align: center;
        position: relative;
        font-size: 13px;
        z-index: 4;
        padding: 0 20px;
    }

    span#regular{
        color: #B0B0B0;
        font-weight: 300;
        margin-right: 8px;
    }

    a#texto-abajo{
        position: relative;
        font-size: 13px;
        font-weight: 400;
        bottom: 0;
        align-self: center;
        text-decoration: none;
        color: #fff;
        cursor: pointer;
    }

    a#texto-abajo:hover{
        text-decoration: underline;
    }

    input:-webkit-autofill,
        input:-webkit-autofill:hover,
        input:-webkit-autofill:focus,
        input:-webkit-autofill:active {
            transition: background-color 5000s ease-in-out 0s !important;
            -webkit-text-fill-color: #fff !important;
            caret-color: #479FFA !important;
            background-color: transparent !important;
        }

        input:-webkit-autofill::first-line {
            color: #fff !important;
        }

    @media screen and (max-width: 768px) {
        h1 {
            font-size: clamp(24px, 5vw, 32px);
        }

        p#subtexto-principal {
            font-size: clamp(12px, 3vw, 14px);
            line-height: clamp(20px, 4vw, 24px);
            margin-top: clamp(-10px, -2vw, -20px);
            margin-bottom: clamp(15px, 3vw, 22px);
            padding: 0 clamp(10px, 5vw, 20px);
            max-width: clamp(280px, 80vw, 400px);
            margin-left: auto;
            margin-right: auto;
        }

        form {
            width: clamp(280px, 80vw, 320px);
            height: clamp(40px, 8vw, 44px);
            border-radius: clamp(80px, 20vw, 92px);
            padding-left: clamp(15px, 4vw, 21px);
        }

        input {
            font-size: clamp(12px, 3vw, 14px);
        }

        .texto-abajo {
            font-size: clamp(12px, 3vw, 13px);
            padding: 0 clamp(10px, 5vw, 20px);
            max-width: clamp(280px, 80vw, 400px);
            margin-left: auto;
            margin-right: auto;
        }

        a#texto-abajo {
            font-size: clamp(12px, 3vw, 13px);
        }
    }
</style>
